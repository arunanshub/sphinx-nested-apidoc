[tool.poetry]
name = "sphinx-nested-apidoc"
version = "1.2.5"
description = "sphinx-nested-apidoc: When flattened is not enough"
authors = ["Arunanshu Biswas <mydellpc07@gmail.com>"]
license = "MIT"
readme = "README.rst"
scripts = {sphinx-nested-apidoc = "sphinx_nested_apidoc.__main__:main"}
repository = "https://github.com/arunanshub/sphinx-nested-apidoc"
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Intended Audience :: Developers",
  "Topic :: Documentation :: Sphinx",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/arunanshub/sphinx-nested-apidoc/issues"
"Changelog" = "https://github.com/arunanshub/sphinx-nested-apidoc/blob/master/CHANGELOG.md"

[tool.poetry.dependencies]
python = "^3.8"
Sphinx = ">=6.0.0,<8.0.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.0.0"
mypy = "^1.3.0"

[tool.poetry.group.test.dependencies]
hypothesis = "^6.56.1"
pytest = "^7.1.3"
pytest-xdist = "^3.0.0"
pytest-cov = "^4.0.0"
hypothesis-fspaths = "^0.1"
pytest-mock = "^3.10.0"

[tool.poetry.group.docs.dependencies]
furo = ">=2022.9.29"
sphinxext-opengraph = "^0.8.0"
sphinx-copybutton = "^0.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.commitizen]
name = "cz_conventional_commits"
version = "1.2.5"
tag_format = "v$version"
update_changelog_on_bump = true
changelog_incremental = true
annotated_tag = true
changelog_start_rev = "v0.3.1"
version_files = [
    "pyproject.toml",
    "src/sphinx_nested_apidoc/__init__.py",
]

[tool.black]
line-length = 79
target-verson = "py38"

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING",
  "if typing.TYPE_CHECKING",
]

[tool.pytest.ini_options]
addopts = "--strict-config --strict-markers"

[tool.ruff]
line-length = 79
target-version = "py38"
exclude = [
  "docs",
  "tests",
]
ignore = ["ANN101", "ANN102", "ANN401", "B024", "PLR0913"]
select = [
  "ANN",
  "B",
  "E",
  "F",
  "W",
  "I",
  "S",
  "RET",
  "EM",
  "UP",
  "C90",
  "PTH",
  "SIM",
  "TCH",
  "PIE",
  "TID",
  "G",
  "PL",
]

[tool.ruff.isort]
required-imports = ["from __future__ import annotations"]
combine-as-imports = true
force-wrap-aliases = true
